{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\nexport const fetchData = async country => {\n  let changeableUrl = url;\n\n  if (country === 'global') {\n    changeableUrl = url;\n  } else if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map(dailyData => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/somit/work/covid-19/src/api/index.js"],"names":["axios","url","fetchData","country","changeableUrl","data","confirmed","recovered","deaths","lastUpdate","get","error","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AAC1C,MAAIC,aAAa,GAAGH,GAApB;;AACA,MAAGE,OAAO,KAAK,QAAf,EAAwB;AACtBC,IAAAA,aAAa,GAAGH,GAAhB;AACD,GAFD,MAEM,IAAGE,OAAH,EAAW;AACfC,IAAAA,aAAa,GAAK,GAAEH,GAAI,cAAaE,OAAQ,EAA7C;AACD;;AAED,MAAG;AACD,UAAM;AAAEE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AAAR,QAAyD,MAAMT,KAAK,CAACU,GAAN,CAAUN,aAAV,CAArE;AAEA,WAAO;AAAEE,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA;AAAhC,KAAP;AACD,GAJD,CAIC,OAAME,KAAN,EAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAfM;AAiBP,OAAO,MAAMG,cAAc,GAAG,YAAW;AACvC,MAAG;AACD,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,QAAjB,CAAvB;AAEA,UAAMc,YAAY,GAAGV,IAAI,CAACW,GAAL,CAAUC,SAAD,KAAgB;AAC5CX,MAAAA,SAAS,EAAEW,SAAS,CAACX,SAAV,CAAoBY,KADa;AAE5CV,MAAAA,MAAM,EAAES,SAAS,CAACT,MAAV,CAAiBU,KAFmB;AAG5CC,MAAAA,IAAI,EAAEF,SAAS,CAACG;AAH4B,KAAhB,CAAT,CAArB;AAKA,WAAOL,YAAP;AACD,GATD,CASC,OAAMJ,KAAN,EAAY;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAbM;AAeP,OAAO,MAAMU,cAAc,GAAG,YAAY;AACxC,MAAG;AACD,UAAM;AAAEhB,MAAAA,IAAI,EAAC;AAAEiB,QAAAA;AAAF;AAAP,QAAwB,MAAMtB,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,YAAjB,CAApC;AAEA,WAAOqB,SAAS,CAACN,GAAV,CAAeb,OAAD,IAAaA,OAAO,CAACoB,IAAnC,CAAP;AACD,GAJD,CAIC,OAAMZ,KAAN,EAAa;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CARM","sourcesContent":["import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if(country === 'global'){\n    changeableUrl = url\n  }else if(country){\n    changeableUrl =  `${url}/countries/${country}`\n  }\n\n  try{\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n    \n    return { confirmed, recovered, deaths, lastUpdate };\n  }catch(error){\n    console.log(error);\n  }\n}\n\nexport const fetchDailyData = async () =>{\n  try{\n    const { data } = await axios.get(`${url}/daily`);\n    \n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }))\n    return modifiedData ;\n  }catch(error){\n    console.log(error);\n  }\n}\n\nexport const fetchCountries = async () => {\n  try{\n    const { data:{ countries }} = await axios.get(`${url}/countries`)\n    \n    return countries.map((country) => country.name)\n  }catch(error) {\n    console.log(error);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
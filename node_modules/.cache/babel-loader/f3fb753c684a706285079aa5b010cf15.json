{"ast":null,"code":"var _jsxFileName = \"/home/somit/work/covid-19/src/components/Chart/chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    className: \"text-warning \",\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mt-5 bg-light text-dark\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/somit/work/covid-19/src/components/Chart/chart.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAcC,GAAd,QAAyB,iBAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACrE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,YAAY,EAAC,MAAMV,cAAc,EAArB,EAAZ;AACD,KAFD;;AAGAW,IAAAA,QAAQ;AAGT,GAPQ,EAOP,EAPO,CAAT;AASA,QAAMC,SAAS,GACbH,SAAS,CAACI,MAAV,gBAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAC,CAAC;AACRb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEV,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADE;AAERa,QAAAA,KAAK,EAAE,UAFC;AAGRC,QAAAA,WAAW,EAAE,SAHL;AAIRC,QAAAA,IAAI,EAAE;AAJE,OAAD,EAKP;AACAhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAER,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADN;AAEAW,QAAAA,KAAK,EAAE,QAFP;AAGAC,QAAAA,WAAW,EAAE,KAHb;AAIAE,QAAAA,eAAe,EAAC,sBAJhB;AAKAD,QAAAA,IAAI,EAAE;AALN,OALO;AAFL,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,GAkBM,IAnBR;AAsBE,QAAME,QAAQ,GACZjB,SAAS,gBAEP,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJG,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,KAAK,EAAE,QADE;AAETG,QAAAA,eAAe,EAAE,CACf,sBADe,EAEf,sBAFe,EAGf,sBAHe,CAFR;AAOTjB,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACkB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmChB,MAAM,CAACgB,KAA1C;AAPG,OAAD;AAFN,KADR;AAaE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAE,oBAAmBnB,OAAQ;AAAlD;AAFA,KAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,GAoBP,IArBJ;AAwBF,sBACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAmD,IAAA,OAAO,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GAAGc,QAAH,GAAcV,SADxB,CADF;AAKD,CA/DD;;AAgEA,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport { fetchDailyData } from '../../api'\nimport { Line,Bar } from 'react-chartjs-2'\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  \n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    } \n    fetchAPI();\n    \n\n  },[])\n\n  const lineChart = (\n    dailyData.length\n    ?(\n      <Line className='text-warning '\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets:[{\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true\n          },{\n            data: dailyData.map(({ deaths }) => deaths),\n            label: 'deaths',\n            borderColor: 'red',\n            backgroundColor:'rgba(255, 0, 0, 0.5)',\n            fill: true\n          }]\n        }}\n      />):null \n    )\n\n    const barChart = (\n      confirmed\n      ? (\n        <Bar\n          data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n              label: 'People',\n              backgroundColor: [\n                'rgba(0, 0, 255, 0.5)',\n                'rgba(0, 255, 0, 0.5)',\n                'rgba(255, 0, 0, 0.5)'\n              ],\n              data: [confirmed.value, recovered.value, deaths.value]\n            }]\n          }}\n          options={{\n            legend: {display:false},\n            title: { display: true, text:`Current state in ${country}` }\n          }}\n        />\n      ):null\n    )\n  \n  return(\n    <div className='container mt-5 bg-light text-dark' justify='center'>\n      {country ? barChart : lineChart}\n    </div>  \n  )\n}\nexport default Chart"]},"metadata":{},"sourceType":"module"}